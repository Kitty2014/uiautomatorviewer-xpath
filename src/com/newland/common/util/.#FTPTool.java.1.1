package com.newland.common.util;
import java.io.File;  
import java.io.FileInputStream;  
import java.io.IOException;
import java.util.TimeZone;
import org.apache.commons.net.ftp.FTPClient;  
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.FTPReply;  
import org.apache.log4j.Logger;
  
public class FTPTool {    
	private static Logger logger = Logger.getLogger(FTPTool.class.getName());
    public  FTPClient ftp;    
    /** 
     *  
     * @param path 上传到ftp服务器哪个路径下    
     * @param addr 地址 
     * @param port 端口号 
     * @param username 用户名 
     * @param password 密码 
     * @return 
     * @throws Exception 
     */  
    public boolean connect(String path,String addr,int port,String username,String password) throws Exception {    
        ftp = new FTPClient();  
		boolean isLogin = false;
		FTPClientConfig ftpClientConfig = new FTPClientConfig();
		ftpClientConfig.setServerTimeZoneId(TimeZone.getDefault().getID());
		this.ftp.setControlEncoding("GBK");
		this.ftp.configure(ftpClientConfig);
		try {
			if (port > 0) {
				this.ftp.connect(addr, port);
			} else {
				this.ftp.connect(addr);
			}
			// FTP服务器连接回答
			int reply = this.ftp.getReplyCode();
			if (!FTPReply.isPositiveCompletion(reply)) {
				this.ftp.disconnect();
				System.out.println("登录FTP服务失败！");
				return isLogin;
			}
			isLogin = this.ftp.login(username,password);
			// 设置传输协议
//			this.ftp.enterLocalPassiveMode();
			this.ftp.setFileType(FTPClient.BINARY_FILE_TYPE);
			System.out.println("恭喜," + username + "成功登陆FTP服务器");
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(username + ",登录FTP服务失败！" + e.getMessage());
		}
//		this.ftp.setBufferSize(1024 * 2);
//		this.ftp.setDataTimeout(30 * 1000);
        return isLogin;    
    }    
    
    /**
     * 退出服务器
     */
	public void ftpLogOut() {
		if (null != this.ftp && this.ftp.isConnected()) {
			try {
				boolean reuslt = this.ftp.logout();// 退出FTP服务器
				if (reuslt) {
					logger.info("成功退出服务器");
				}
			} catch (IOException e) {
				e.printStackTrace();
				logger.warn("退出FTP服务器异常！" + e.getMessage());
			} finally {
				try {
					this.ftp.disconnect();// 关闭FTP服务器的连接
				} catch (IOException e) {
					e.printStackTrace();
					logger.warn("关闭FTP服务器的连接异常！");
				}
			}
		}
	}
	
	/**
	 * 上传文件
	 * @param file
	 * @param filename
	 * @throws IOException
	 */
	public void upLoadFile(File file,String filename) throws IOException{
        File file2 = new File(file.getPath());    
        FileInputStream input = new FileInputStream(file2);    
        ftp.storeFile(filename, input);    
        input.close();      
    }
}  
